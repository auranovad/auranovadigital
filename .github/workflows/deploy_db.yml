name: Deploy DB to Supabase
on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'supabase/sql/*.sql'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
  
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Apply migrations to Supabase
        env:
          SUPABASE_DB_URL: ${{ secrets.SUPABASE_DB_URL }}
        run: |
          set -e
          for f in $(find supabase/sql -maxdepth 1 -type f -name '*.sql' | sort); do
            echo "Applying $f"
            psql "$SUPABASE_DB_URL" -v ON_ERROR_STOP=1 -f "$f"
          done
      - name: Sanity check (RLS still ON)
        env:
          SUPABASE_DB_URL: ${{ secrets.SUPABASE_DB_URL }}
        run: |
          set -euo pipefail
          # Cuenta cuÃ¡ntas tablas en nuestros schemas tienen RLS habilitado
          SQL="select count(*)
               from pg_class c
               join pg_namespace n on n.oid = c.relnamespace
               where c.relkind = 'r'
                 and n.nspname in ('core','sec','omni','sch','crm')
                 and c.relrowsecurity = true;"
          CNT=$(psql "$SUPABASE_DB_URL" -t -A -c "$SQL")
          echo "Tables with RLS enabled: $CNT"
          if [ "$CNT" -eq 0 ]; then
            echo "ERROR: No tables with RLS enabled in target schemas." >&2
            # Dump de ayuda para diagnosticar
            psql "$SUPABASE_DB_URL" -c "
              select n.nspname as schema, c.relname as table, c.relrowsecurity as rls_enabled
              from pg_class c
              join pg_namespace n on n.oid = c.relnamespace
              where c.relkind='r' and n.nspname in ('core','sec','omni','sch','crm')
              order by 1,2;"
            exit 1
          fi
